#!/usr/bin/python3

import os
import subprocess
import sys
import time
import datetime

from scripts_path import PATH

RED = '\033[0;31m'
GRE = '\033[0;32m'
CYN = '\033[0;36m'
LGY = '\033[0;37m'
LRD = '\033[1;31m'
YEL = '\033[0;33m'
BWH = '\033[1;37m'
NC = '\033[0m'


def clear():
    subprocess.run("clear", shell=True)

def get_highest_number():
    highest = 0
    with open(f"{PATH}/mouli-folder/mouli_data", "r") as f:
        lines = f.readlines()

        for line in lines:
            parts = line.split(".")
            project = parts[0]
            if len(project) > highest:
                highest = len(project)
    return highest



def print_switch_bar():
    switch_bar = ""
    for i in range(100):
        switch_bar += "-"
    print(f"{LGY}â–¢{switch_bar:<100}â–¢")


def display_difference(diff_seconds):
    

    diff_ms = diff_seconds // 60
    diff_hs = diff_seconds // 3600
    diff_ds = diff_seconds // 86400

    if diff_seconds < 60:
        return f"{int(diff_seconds)}s ago"

    elif diff_seconds < 3600:
        return f"{int(diff_ms)}m {int(diff_seconds)%60}s ago"
    
    elif diff_seconds < 86400:
        return f"{int(diff_hs)}h {int(diff_ms)%60}m ago"
    
    elif diff_seconds < 86400*7:
        return f"{int(diff_ds)}d {int(diff_hs)%24}h ago"
    
    else:
        return f"{int(diff_ds)}d ago"

    return 0


def display_data_in_normal_print():


    t = datetime.datetime.now()
    c_time = t.strftime('%Hh%M.%S')
    d_time = t.strftime('%d/%m/%Y')

    biggest_project = get_highest_number()
    nb_project = 0

    if biggest_project == 0:
        print_switch_bar()
        print("|")
        print("|  Network Error")
        print("|")
        print_switch_bar()

        sys.exit()
    

    percent_total = 0    
    percent_average = 0    


    print_switch_bar()
    with open(f"{PATH}/mouli-folder/mouli_data", "r") as f:
        
        lines = f.readlines()
        lines.reverse()

        for line in lines:

            nb_project += 1

            parts = line.split("$")

            project = parts[0]

            percent = float(parts[1][:-1])
            percent_total += percent
            percent = round(percent, 2)


            if percent < 30:
                percent_s = f"{RED}{str(percent)} %{NC}"
            elif percent >= 75:
                percent_s = f"{GRE}{str(percent)} %{NC}"
            else:
                percent_s = f"{YEL}{str(percent)} %{NC}"
            
            hour = int(parts[2][-9:-7])
            mins = parts[2][-6:-4]
            sec = parts[2][-3:-1]
            requis = parts[3]


            dd = int(parts[2][8:10])
            mm = int(parts[2][5:7])
            yy = int(parts[2][2:4])+2000

            datetime_str = f"{yy}-{mm}-{dd} {hour}:{mins}:{sec}"
            datetime_obj = datetime.datetime.strptime(datetime_str, "%Y-%m-%d %H:%M:%S")
            mouli_timestmp = datetime_obj.timestamp()

            now_timestmp = time.time()
            diff_stmp = now_timestmp - mouli_timestmp


            if mouli_timestmp > 1730026800:
                add_hour = 1
                diff_stmp -= 3600
            else:
                add_hour = 2
                diff_stmp -= 7200

            hour += add_hour
            if hour == 24:
                hour = 0
                dd += 1

            diff_time = display_difference(diff_stmp)



            yy = yy - 2000

        

            nb = int(percent)
            progress_bar = "â–¬"
            for i in range(1, nb):
                progress_bar += "â–¬"

            if len(progress_bar) < 30:
                color = RED
            elif len(progress_bar) >= 75:
                color = GRE
            else:
                color = YEL


            requis = float(requis)
            prerequis = ""
            if requis == 2:
                prerequis = f"ðŸ”µâ€‹ {CYN}Pre. Met{NC}"
            if requis == 1.5:
                prerequis = f"âš«â€‹ {RED}Crashed{NC}"
            if requis == 1: 
                prerequis = f"ðŸ”´â€‹ {RED}No Test.{NC}"
            if requis == 0.5:
                prerequis = f"ðŸ”´â€‹ {RED}Deliv. Err.{NC}"
            if requis == 0.0:
                prerequis = f"âš«â€‹ {RED}Ban. Func.{NC}"



            
            print(f"{LGY}| âžœ {BWH}{project:<{biggest_project}}{LGY}", end='') 
            print(f"ðŸ‘¤ {percent_s:>7}", end='\t\t')
            print(f"âŒ› {hour:0}h{mins}.{sec}{LGY} on {dd}/{mm}/{yy} [{diff_time}]")
            print(f"|")
            print(f"| {BWH}{prerequis}{LGY}{NC}")
            print(f"{LGY}[{color}{progress_bar:<100}{LGY}]", end='\n')
            print_switch_bar()



        percent_average = percent_total / nb_project

        print(f"|")
        print(f"â–¢-> Statistics")
        print(f"|")
        print(f"|  Launched at {BWH}{c_time}{LGY} on {BWH}{d_time}{LGY}")
        print(f"|")
        print(f"|  Projects: {BWH}{nb_project}{LGY}")
        print(f"|  Average : {BWH}{percent_average:.5f} %{LGY}")
        print(f"|")

        print(f"{LGY}Â°{NC}")




clear()
display_data_in_normal_print()